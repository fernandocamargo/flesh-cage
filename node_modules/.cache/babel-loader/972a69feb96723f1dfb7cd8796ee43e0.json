{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/fernandocamargodelbuono/_dev/flesh-cage/src/components/app/settings.js\";\n\nimport numeral from 'numeral';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport { Avatar, Card, CardContent, CardHeader, Typography } from '@material-ui/core';\nimport { GetApp as Size, Visibility } from '@material-ui/icons';\nimport { Counter } from 'components';\nimport { date, renderers } from './helpers';\nexport var columns = [{\n  name: 'id',\n  label: 'ID',\n  render: function render(_ref) {\n    var id = _ref.id;\n    return id || /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, id);\n  }\n}, {\n  name: 'summary',\n  label: 'Summary',\n  render: function render(_ref2) {\n    var created_at = _ref2.created_at,\n        owner = _ref2.owner,\n        full_name = _ref2.full_name,\n        description = _ref2.description,\n        html_url = _ref2.html_url;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      avatar: /*#__PURE__*/React.createElement(\"a\", {\n        href: owner.html_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        title: \"See \\\"\".concat(owner.login, \"\\\" at Github\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: owner.login,\n        src: owner.avatar_url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      })),\n      title: /*#__PURE__*/React.createElement(\"a\", {\n        href: html_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        title: \"See \\\"\".concat(full_name, \"\\\" at Github\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, full_name),\n      subheader: /*#__PURE__*/React.createElement(\"em\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }\n      }, \"Created at: \", date(created_at).format()),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Markdown, {\n      source: description,\n      renderers: renderers,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }))));\n  }\n}, {\n  name: 'language',\n  label: 'Language',\n  render: function render(_ref3) {\n    var language = _ref3.language;\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, language);\n  }\n}, {\n  name: 'updated',\n  label: 'Last update',\n  render: function render(_ref4) {\n    var updated_at = _ref4.updated_at;\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, date(updated_at).format());\n  }\n}, {\n  name: 'stars',\n  label: 'Stars',\n  render: function render(_ref5) {\n    var stargazers_count = _ref5.stargazers_count;\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, numeral(stargazers_count).format('0a'));\n  }\n}, {\n  name: 'forks',\n  label: 'Forks',\n  render: function render(_ref6) {\n    var forks_count = _ref6.forks_count;\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, numeral(forks_count).format('0a'));\n  }\n}, {\n  name: 'issues',\n  label: 'Issues',\n  render: function render(_ref7) {\n    var open_issues_count = _ref7.open_issues_count;\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"span\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, numeral(open_issues_count).format('0a'));\n  }\n}, {\n  name: 'metrics',\n  label: 'Other metrics',\n  render: function render(_ref8) {\n    var watchers_count = _ref8.watchers_count,\n        size = _ref8.size;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Counter, {\n      value: watchers_count,\n      format: \"0a\",\n      title: \"Watchers\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Visibility, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Counter, {\n      value: size,\n      format: \"0b\",\n      title: \"Size\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Size, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })));\n  }\n}];\nexport var getRowId = function getRowId(_ref9) {\n  var id = _ref9.id;\n  return id;\n};","map":{"version":3,"sources":["/Users/fernandocamargodelbuono/_dev/flesh-cage/src/components/app/settings.js"],"names":["numeral","React","Markdown","Avatar","Card","CardContent","CardHeader","Typography","GetApp","Size","Visibility","Counter","date","renderers","columns","name","label","render","id","created_at","owner","full_name","description","html_url","login","avatar_url","format","language","updated_at","stargazers_count","forks_count","open_issues_count","watchers_count","size","getRowId"],"mappings":"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","sourcesContent":["import numeral from 'numeral';\nimport React from 'react';\nimport Markdown from 'react-markdown';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from '@material-ui/core';\nimport { GetApp as Size, Visibility } from '@material-ui/icons';\n\nimport { Counter } from 'components';\n\nimport { date, renderers } from './helpers';\n\nexport const columns = [\n  {\n    name: 'id',\n    label: 'ID',\n    render: ({ id }) =>\n      id || (\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n          {id}\n        </Typography>\n      ),\n  },\n  {\n    name: 'summary',\n    label: 'Summary',\n    render: ({ created_at, owner, full_name, description, html_url }) => (\n      <Card>\n        <CardHeader\n          avatar={\n            <a\n              href={owner.html_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              title={`See \"${owner.login}\" at Github`}\n            >\n              <Avatar alt={owner.login} src={owner.avatar_url} />\n            </a>\n          }\n          title={\n            <a\n              href={html_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              title={`See \"${full_name}\" at Github`}\n            >\n              {full_name}\n            </a>\n          }\n          subheader={<em>Created at: {date(created_at).format()}</em>}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\n            <Markdown source={description} renderers={renderers} />\n          </Typography>\n        </CardContent>\n      </Card>\n    ),\n  },\n  {\n    name: 'language',\n    label: 'Language',\n    render: ({ language }) => (\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n        {language}\n      </Typography>\n    ),\n  },\n  {\n    name: 'updated',\n    label: 'Last update',\n    render: ({ updated_at }) => (\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n        {date(updated_at).format()}\n      </Typography>\n    ),\n  },\n  {\n    name: 'stars',\n    label: 'Stars',\n    render: ({ stargazers_count }) => (\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n        {numeral(stargazers_count).format('0a')}\n      </Typography>\n    ),\n  },\n  {\n    name: 'forks',\n    label: 'Forks',\n    render: ({ forks_count }) => (\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n        {numeral(forks_count).format('0a')}\n      </Typography>\n    ),\n  },\n  {\n    name: 'issues',\n    label: 'Issues',\n    render: ({ open_issues_count }) => (\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n        {numeral(open_issues_count).format('0a')}\n      </Typography>\n    ),\n  },\n  {\n    name: 'metrics',\n    label: 'Other metrics',\n    render: ({ watchers_count, size }) => (\n      <div>\n        <Counter value={watchers_count} format=\"0a\" title=\"Watchers\">\n          <Visibility />\n        </Counter>\n        <Counter value={size} format=\"0b\" title=\"Size\">\n          <Size />\n        </Counter>\n      </div>\n    ),\n  },\n];\n\nexport const getRowId = ({ id }) => id;\n"]},"metadata":{},"sourceType":"module"}